pluginManagement {
    includeBuild(new File(["node", "--print", "require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })"].execute(null, rootDir).text.trim()).getParentFile().toString())
}
plugins { id("com.facebook.react.settings") }

extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->
  if (System.getenv('EXPO_USE_COMMUNITY_AUTOLINKING') == '1') {
    ex.autolinkLibrariesFromCommand()
  } else {
    def command = [
      'node',
      '--no-warnings',
      '--eval',
      'require(require.resolve(\'expo-modules-autolinking\', { paths: [require.resolve(\'expo/package.json\')] }))(process.argv.slice(1))',
      'react-native-config',
      '--json',
      '--platform',
      'android'
    ].toList()
    ex.autolinkLibrariesFromCommand(command)
  }
}

rootProject.name = 'advancedmlappreactnative'

dependencyResolutionManagement {
  versionCatalogs {
    reactAndroidLibs {
      from(files(new File(["node", "--print", "require.resolve('react-native/package.json')"].execute(null, rootDir).text.trim(), "../gradle/libs.versions.toml")))
    }
  }
}

apply from: new File(["node", "--print", "require.resolve('expo/package.json')"].execute(null, rootDir).text.trim(), "../scripts/autolinking.gradle");
useExpoModules()

include ':app'
includeBuild(new File(["node", "--print", "require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })"].execute(null, rootDir).text.trim()).getParentFile())

// Fix for Expo modules missing compileSdkVersion
gradle.beforeProject { project ->
    if (project.hasProperty('android')) {
        project.afterEvaluate {
            if (project.plugins.hasPlugin('com.android.library')) {
                if (!project.android.hasProperty('compileSdkVersion') && rootProject.ext.has('compileSdkVersion')) {
                    project.android.compileSdk rootProject.ext.compileSdkVersion
                }
            }
        }
    }
}

// Fix for Maven publishing issues
gradle.beforeProject { project ->
    project.plugins.withId('maven-publish') {
        project.publishing {
            publications {
                release(MavenPublication) {
                    groupId = 'com.deacon.admin.maui.app'
                    artifactId = project.name
                    version = '1.0'
                }
            }
        }
    }
}
